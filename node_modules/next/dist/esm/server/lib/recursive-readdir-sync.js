import fs from "fs";
import { join } from "path";
/**
 * Recursively read directory
 * Returns array holding all relative paths
 */ export function recursiveReadDirSync(/** The directory to read */ dir, /** This doesn't have to be provided, it's used for the recursion */ arr = [], /** Used to replace the initial path, only the relative path is left, it's faster than path.relative. */ rootDir = dir) {
    const result = fs.readdirSync(dir, {
        withFileTypes: true
    });
    result.forEach((part)=>{
        const absolutePath = join(dir, part.name);
        if (part.isDirectory()) {
            recursiveReadDirSync(absolutePath, arr, rootDir);
            return;
        }
        arr.push(absolutePath.replace(rootDir, ""));
    });
    return arr;
}

//# sourceMappingURL=recursive-readdir-sync.js.map